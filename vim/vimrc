set encoding=utf-8
set fileencoding=utf-8
set number                      " Display line numbers beside buffer
set nocompatible                " Don't maintain compatibilty with Vi.
filetype off                    " required for vundle
set hidden                      " Allow buffer change w/o saving
set lazyredraw                  " Don't update while executing macros
set backspace=indent,eol,start  " Sane backspace behavior
set history=1000                " Remember last 1000 commands
set scrolloff=4                 " Keep at least 4 lines below cursor
set relativenumber
set nobackup
set nowritebackup
set noswapfile

nmap 0 ^

" Move up and down by visible lines if current line is wrapped
nmap j gj
nmap k gk

imap jk <esc>:w<cr>
imap kj <esc>:w<cr>

let mapleader = "\<Space>"
nmap <leader>vi :tabedit ~/.vimrc<cr>
nmap <leader>so :source $MYVIMRC<cr>

"save & quit
map <leader>w :w<cr>
map <leader>q :q<cr>
map <leader>wq :w<cr>:q<cr>

" wrapping and highlight
map <leader>no :let @/ = ""<cr>
map <leader>yw :set wrap<cr>
map <leader>nw :set nowrap<cr>

" Copy the entire buffer into the system register
nmap <leader>co ggVG*y

" Pre-populate a split command with the current directory
nmap <leader>v :vnew <C-r>=escape(expand("%:p:h"), ' ') . '/'<cr>

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-commentary'
Plugin 'vim-ruby/vim-ruby'
Plugin 'tpope/vim-rails'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'christoomey/vim-tmux-runner'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Make CtrlP use ag for listing the files. Way faster and no useless files.
let g:ctrlp_user_command = 'ag %s -l --hidden --nocolor -g ""'
let g:ctrlp_use_caching = 0
